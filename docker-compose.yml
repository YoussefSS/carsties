services:
  postgres: # name of the service we want to create
    image: postgres # default postgres image
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432 # port to access this service from outside of docker : port to access this service from inside docker
    volumes:  # since this is a database, we need to tell it to persist data in a volume on our pc
      - /var/lib/postgresql/data 
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongodb/data # named volume
  rabbitmq: 
    image: rabbitmq:3-management-alpine # comes with the message broken and manager utility
    ports:
      - 5672:5672 # rabbitMQ port
      - 15672:15672 # management service port, there's also authentication but we'll use guest:guest for now
  auction-svc:
    image: youssefhosny98/auction-svc:latest # latest is the latest tag we've built
    build: 
      context: . # which context this should run in. Period means inside the Carsties directory
      dockerfile: src/AuctionService/Dockerfile
    environment: # environment variables. These will override ALL of our appsettings/appsettings.Development.json variables
      - ASPNETCORE_ENVIRONMENT=Development # run in development instead of the default production
      - ASPNETCORE_URLS=http://+:80 # internal url that the AuctionService will run on. We'll access it with a different port
      - RabbitMq__Host=rabbitmq # __ is used instead of : .... rabbitmq is the name of the above rabbitmq container
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auctions
      - IdentityServiceUrl=http://identity-svc
    ports:
     - 7001:80 # 7001 external, 80 internal. Each one of these services is given their own IP by docker, so we can reuse the same ports
    depends_on:
      - postgres
      - rabbitmq
  search-svc:
    image: youssefhosny98/search-svc:latest 
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
      - ASPNETCORE_URLS=http://+:80 
      - RabbitMq__Host=rabbitmq 
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongo # mongodb = the above mongodb service
      - AuctionServiceUrl=http://auction-svc
    ports:
     - 7002:80 
    depends_on:
      - mongo
      - rabbitmq
